import { S as SvelteComponentDev, i as init, d as dispatch_dev, s as safe_not_equal, v as validate_slots, D as onMount, a as space, e as element, t as text, c as create_component, q as query_selector_all, b as detach_dev, f as claim_space, g as claim_element, h as children, j as claim_text, k as claim_component, l as attr_dev, m as add_location, o as insert_dev, p as append_dev, r as mount_component, u as set_data_dev, w as transition_in, x as transition_out, y as destroy_component } from './client.02f9d084.js';
import { C as Client, P as PrismicDOM, l as linkResolver } from './prismic-config.af65f472.js';
import { P as PrismicHTML } from './PrismicHTML.e74cfc39.js';

/* src/routes/blog/[uid].svelte generated by Svelte v3.24.0 */
const file = "src/routes/blog/[uid].svelte";

function create_fragment(ctx) {
	let title_value;
	let t0;
	let section0;
	let div1;
	let div0;
	let img;
	let img_src_value;
	let img_alt_value;
	let t1;
	let section1;
	let div2;
	let h2;
	let t2_value = PrismicDOM.RichText.asText(/*post*/ ctx[0].data.title) + "";
	let t2;
	let t3;
	let p0;
	let t4;
	let t5_value = formatDate(/*post*/ ctx[0].data.date) + "";
	let t5;
	let t6;
	let p1;
	let t7_value = PrismicDOM.RichText.asText(/*post*/ ctx[0].data.intro) + "";
	let t7;
	let t8;
	let prismichtml;
	let current;
	document.title = title_value = PrismicDOM.RichText.asText(/*post*/ ctx[0].data.title);

	prismichtml = new PrismicHTML({
			props: { elements: /*post*/ ctx[0].data.main },
			$$inline: true
		});

	const block = {
		c: function create() {
			t0 = space();
			section0 = element("section");
			div1 = element("div");
			div0 = element("div");
			img = element("img");
			t1 = space();
			section1 = element("section");
			div2 = element("div");
			h2 = element("h2");
			t2 = text(t2_value);
			t3 = space();
			p0 = element("p");
			t4 = text("Written on ");
			t5 = text(t5_value);
			t6 = space();
			p1 = element("p");
			t7 = text(t7_value);
			t8 = space();
			create_component(prismichtml.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-1gv1lc1\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			section0 = claim_element(nodes, "SECTION", { class: true });
			var section0_nodes = children(section0);
			div1 = claim_element(section0_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);

			img = claim_element(div0_nodes, "IMG", {
				src: true,
				alt: true,
				"data-uk-cover": true
			});

			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			section0_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			section1 = claim_element(nodes, "SECTION", { class: true });
			var section1_nodes = children(section1);
			div2 = claim_element(section1_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			h2 = claim_element(div2_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t2 = claim_text(h2_nodes, t2_value);
			h2_nodes.forEach(detach_dev);
			t3 = claim_space(div2_nodes);
			p0 = claim_element(div2_nodes, "P", { class: true });
			var p0_nodes = children(p0);
			t4 = claim_text(p0_nodes, "Written on ");
			t5 = claim_text(p0_nodes, t5_value);
			p0_nodes.forEach(detach_dev);
			t6 = claim_space(div2_nodes);
			p1 = claim_element(div2_nodes, "P", { class: true });
			var p1_nodes = children(p1);
			t7 = claim_text(p1_nodes, t7_value);
			p1_nodes.forEach(detach_dev);
			t8 = claim_space(div2_nodes);
			claim_component(prismichtml.$$.fragment, div2_nodes);
			div2_nodes.forEach(detach_dev);
			section1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = /*post*/ ctx[0].data.image.url)) attr_dev(img, "src", img_src_value);
			attr_dev(img, "alt", img_alt_value = PrismicDOM.RichText.asText(/*post*/ ctx[0].data.title));
			attr_dev(img, "data-uk-cover", "");
			add_location(img, file, 38, 0, 826);
			attr_dev(div0, "class", "uk-height-large uk-cover-container");
			add_location(div0, file, 37, 0, 777);
			attr_dev(div1, "class", "uk-container");
			add_location(div1, file, 36, 0, 750);
			attr_dev(section0, "class", "uk-section uk-section-small uk-padding-remove-bottom");
			add_location(section0, file, 35, 0, 679);
			attr_dev(h2, "class", "uk-heading-medium title svelte-11dwq18");
			add_location(h2, file, 45, 0, 1044);
			attr_dev(p0, "class", "uk-article-meta svelte-11dwq18");
			add_location(p0, file, 46, 0, 1131);
			attr_dev(p1, "class", "uk-text-lead svelte-11dwq18");
			add_location(p1, file, 47, 0, 1202);
			attr_dev(div2, "class", "uk-container uk-container-small");
			add_location(div2, file, 44, 0, 998);
			attr_dev(section1, "class", "uk-section-small uk-article svelte-11dwq18");
			add_location(section1, file, 43, 0, 952);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			insert_dev(target, section0, anchor);
			append_dev(section0, div1);
			append_dev(div1, div0);
			append_dev(div0, img);
			insert_dev(target, t1, anchor);
			insert_dev(target, section1, anchor);
			append_dev(section1, div2);
			append_dev(div2, h2);
			append_dev(h2, t2);
			append_dev(div2, t3);
			append_dev(div2, p0);
			append_dev(p0, t4);
			append_dev(p0, t5);
			append_dev(div2, t6);
			append_dev(div2, p1);
			append_dev(p1, t7);
			append_dev(div2, t8);
			mount_component(prismichtml, div2, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if ((!current || dirty & /*PrismicDOM, post*/ 1) && title_value !== (title_value = PrismicDOM.RichText.asText(/*post*/ ctx[0].data.title))) {
				document.title = title_value;
			}

			if (!current || dirty & /*post*/ 1 && img.src !== (img_src_value = /*post*/ ctx[0].data.image.url)) {
				attr_dev(img, "src", img_src_value);
			}

			if (!current || dirty & /*post*/ 1 && img_alt_value !== (img_alt_value = PrismicDOM.RichText.asText(/*post*/ ctx[0].data.title))) {
				attr_dev(img, "alt", img_alt_value);
			}

			if ((!current || dirty & /*post*/ 1) && t2_value !== (t2_value = PrismicDOM.RichText.asText(/*post*/ ctx[0].data.title) + "")) set_data_dev(t2, t2_value);
			if ((!current || dirty & /*post*/ 1) && t5_value !== (t5_value = formatDate(/*post*/ ctx[0].data.date) + "")) set_data_dev(t5, t5_value);
			if ((!current || dirty & /*post*/ 1) && t7_value !== (t7_value = PrismicDOM.RichText.asText(/*post*/ ctx[0].data.intro) + "")) set_data_dev(t7, t7_value);
			const prismichtml_changes = {};
			if (dirty & /*post*/ 1) prismichtml_changes.elements = /*post*/ ctx[0].data.main;
			prismichtml.$set(prismichtml_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(prismichtml.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(prismichtml.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			if (detaching) detach_dev(section0);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(section1);
			destroy_component(prismichtml);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

let post = null;

async function preload({ params, query }) {
	const uid = params.uid;
	post = await Client.getByUID("post", uid);

	if (post) {
		return { post };
	} else {
		this.error(res.status, data.message);
	}
}

function formatDate(date) {
	return new Date(date).toLocaleDateString();
}

function instance($$self, $$props, $$invalidate) {
	let { post } = $$props;
	const writable_props = ["post"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<U5Buidu5D> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("U5Buidu5D", $$slots, []);

	$$self.$set = $$props => {
		if ("post" in $$props) $$invalidate(0, post = $$props.post);
	};

	$$self.$capture_state = () => ({
		onMount,
		PrismicHTML,
		PrismicDOM,
		Client,
		linkResolver,
		post,
		preload,
		formatDate,
		post
	});

	$$self.$inject_state = $$props => {
		if ("post" in $$props) $$invalidate(0, post = $$props.post);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [post];
}

class U5Buidu5D extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { post: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "U5Buidu5D",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*post*/ ctx[0] === undefined && !("post" in props)) {
			console.warn("<U5Buidu5D> was created without expected prop 'post'");
		}
	}

	get post() {
		throw new Error("<U5Buidu5D>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set post(value) {
		throw new Error("<U5Buidu5D>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export default U5Buidu5D;
export { preload };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiW3VpZF0uNWIzNmI0MTkuanMiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9yb3V0ZXMvYmxvZy9bdWlkXS5zdmVsdGUiXSwic291cmNlc0NvbnRlbnQiOlsiPHNjcmlwdCBjb250ZXh0PVwibW9kdWxlXCI+XG5cdGltcG9ydCB7IG9uTW91bnQgfSBmcm9tICdzdmVsdGUnO1xuXHRpbXBvcnQgUHJpc21pY0hUTUwgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9QcmlzbWljSFRNTC5zdmVsdGUnO1xuXHRpbXBvcnQgUHJpc21pY0RPTSBmcm9tICdwcmlzbWljLWRvbSc7XG5cdGltcG9ydCB7IENsaWVudCwgbGlua1Jlc29sdmVyIH0gZnJvbSAnLi4vLi4vLi4vcHJpc21pYy1jb25maWcuanMnO1xuXG5sZXQgcG9zdCA9IG51bGw7XG5cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHByZWxvYWQoeyBwYXJhbXMsIHF1ZXJ5IH0pIHtcblx0Y29uc3QgdWlkID0gcGFyYW1zLnVpZDtcblx0cG9zdCA9IGF3YWl0IENsaWVudC5nZXRCeVVJRCgncG9zdCcsIHVpZCk7XG5cblxuXHRpZiAocG9zdCkge1xuXHRcdHJldHVybiB7XG5cdFx0XHRwb3N0XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHR0aGlzLmVycm9yKHJlcy5zdGF0dXMsIGRhdGEubWVzc2FnZSk7XG5cdH1cbn1cbmZ1bmN0aW9uIGZvcm1hdERhdGUoZGF0ZSkge1xuXHRyZXR1cm4gbmV3IERhdGUoZGF0ZSkudG9Mb2NhbGVEYXRlU3RyaW5nKClcbn1cbjwvc2NyaXB0PlxuXG48c2NyaXB0PlxuZXhwb3J0IGxldCBwb3N0O1xuPC9zY3JpcHQ+XG5cbjxzdmVsdGU6aGVhZD5cbjx0aXRsZT57UHJpc21pY0RPTS5SaWNoVGV4dC5hc1RleHQocG9zdC5kYXRhLnRpdGxlKX08L3RpdGxlPlxuPC9zdmVsdGU6aGVhZD5cblxuPHNlY3Rpb24gY2xhc3M9XCJ1ay1zZWN0aW9uIHVrLXNlY3Rpb24tc21hbGwgdWstcGFkZGluZy1yZW1vdmUtYm90dG9tXCI+XG48ZGl2IGNsYXNzPVwidWstY29udGFpbmVyXCI+XG48ZGl2IGNsYXNzPVwidWstaGVpZ2h0LWxhcmdlIHVrLWNvdmVyLWNvbnRhaW5lclwiPlxuPGltZyBzcmM9XCJ7cG9zdC5kYXRhLmltYWdlLnVybH1cIiBhbHQ9XCJ7UHJpc21pY0RPTS5SaWNoVGV4dC5hc1RleHQocG9zdC5kYXRhLnRpdGxlKX1cIiBkYXRhLXVrLWNvdmVyPlxuPC9kaXY+XG48L2Rpdj5cbjwvc2VjdGlvbj5cblxuPHNlY3Rpb24gY2xhc3M9XCJ1ay1zZWN0aW9uLXNtYWxsIHVrLWFydGljbGVcIj5cbjxkaXYgY2xhc3M9XCJ1ay1jb250YWluZXIgdWstY29udGFpbmVyLXNtYWxsXCI+XG48aDIgY2xhc3M9XCJ1ay1oZWFkaW5nLW1lZGl1bSB0aXRsZVwiPntQcmlzbWljRE9NLlJpY2hUZXh0LmFzVGV4dChwb3N0LmRhdGEudGl0bGUpfTwvaDI+XG48cCBjbGFzcz1cInVrLWFydGljbGUtbWV0YVwiPldyaXR0ZW4gb24ge2Zvcm1hdERhdGUocG9zdC5kYXRhLmRhdGUpfTwvcD5cbjxwIGNsYXNzPVwidWstdGV4dC1sZWFkXCI+e1ByaXNtaWNET00uUmljaFRleHQuYXNUZXh0KHBvc3QuZGF0YS5pbnRybyl9PC9wPlxuXHQ8UHJpc21pY0hUTUwgZWxlbWVudHM9e3Bvc3QuZGF0YS5tYWlufSAvPlxuPC9kaXY+XG48L3NlY3Rpb24+XG5cbjxzdHlsZT5cblxuXHRoMi50aXRsZSB7XG5cdFx0Zm9udC1mYW1pbHk6IG1vc3RyYS1udW92YSwgc2Fucy1zZXJpZjtcblx0XHRmb250LXdlaWdodDogNDAwO1xuXHRcdGZvbnQtc2l6ZTogY2xhbXAoMS41cmVtLCAzLjI1dncsIDIuNXJlbSk7XG5cdFx0dGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcblx0XHRjb2xvcjogYmxhY2s7XG5cdH1cblxuXHQudWstYXJ0aWNsZS1tZXRhIHtcblx0XHRmb250LWZhbWlseTogbmV1ZS1oYWFzLXVuaWNhLCBzYW5zLXNlcmlmO1xuXHRcdGZvbnQtd2VpZ2h0OiA2MDAgIWltcG9ydGFudDtcblx0XHRmb250LXNpemU6IDAuNzVyZW0gIWltcG9ydGFudDtcblx0XHRsZXR0ZXItc3BhY2luZzogMC4wMjVyZW0gIWltcG9ydGFudDtcblx0XHRjb2xvcjogIzQ0NDQ0NCAhaW1wb3J0YW50O1xuXHR9XG5cblx0LnVrLWFydGljbGUgcC51ay10ZXh0LWxlYWQge1xuXHRcdGZvbnQtZmFtaWx5OiBhZG9iZS1jYXNsb24tcHJvLCBzZXJpZjtcblx0XHRmb250LXNpemU6IDEuMjVyZW0gIWltcG9ydGFudDtcblx0XHRmb250LXdlaWdodDogNDAwICFpbXBvcnRhbnQ7XG5cdFx0Y29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7XG5cdH1cblxuXHQudWstYXJ0aWNsZSBwIHtcblx0XHRmb250LWZhbWlseTogYWRvYmUtY2FzbG9uLXBybywgc2VyaWY7XG5cdFx0Zm9udC13ZWlnaHQ6IDQwMCAhaW1wb3J0YW50O1xuXHRcdGZvbnQtc2l6ZTogMS4xMjVyZW0gIWltcG9ydGFudDtcblx0XHRsaW5lLWhlaWdodDogMS4yNTtcblx0XHRjb2xvcjogYmxhY2sgIWltcG9ydGFudDtcblx0fVxuXG48L3N0eWxlPlxuXG5cblxuXG4iXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Z0JBNkNxQyxVQUFVLENBQUMsUUFBUSxDQUFDLE1BQU0sVUFBQyxHQUFJLElBQUMsSUFBSSxDQUFDLEtBQUs7Ozs7O2dCQUN4QyxVQUFVLFVBQUMsR0FBSSxJQUFDLElBQUksQ0FBQyxJQUFJOzs7O2dCQUN2QyxVQUFVLENBQUMsUUFBUSxDQUFDLE1BQU0sVUFBQyxHQUFJLElBQUMsSUFBSSxDQUFDLEtBQUs7Ozs7O2dDQWYzRCxVQUFVLENBQUMsUUFBUSxDQUFDLE1BQU0sVUFBQyxHQUFJLElBQUMsSUFBSSxDQUFDLEtBQUs7OzsrQkFnQjFCLEdBQUksSUFBQyxJQUFJLENBQUMsSUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7NkNBVjNCLEdBQUksSUFBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUc7d0NBQVMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxNQUFNLFVBQUMsR0FBSSxJQUFDLElBQUksQ0FBQyxLQUFLOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O3NGQU56RSxVQUFVLENBQUMsUUFBUSxDQUFDLE1BQU0sVUFBQyxHQUFJLElBQUMsSUFBSSxDQUFDLEtBQUs7Ozs7K0VBTXZDLEdBQUksSUFBQyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUc7Ozs7NEVBQVMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxNQUFNLFVBQUMsR0FBSSxJQUFDLElBQUksQ0FBQyxLQUFLOzs7O29FQU81QyxVQUFVLENBQUMsUUFBUSxDQUFDLE1BQU0sVUFBQyxHQUFJLElBQUMsSUFBSSxDQUFDLEtBQUs7b0VBQ3hDLFVBQVUsVUFBQyxHQUFJLElBQUMsSUFBSSxDQUFDLElBQUk7b0VBQ3ZDLFVBQVUsQ0FBQyxRQUFRLENBQUMsTUFBTSxVQUFDLEdBQUksSUFBQyxJQUFJLENBQUMsS0FBSzs7bUVBQzNDLEdBQUksSUFBQyxJQUFJLENBQUMsSUFBSTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUExQ2xDLElBQUksR0FBRyxJQUFJOztlQUdPLE9BQU8sR0FBRyxNQUFNLEVBQUUsS0FBSztPQUN0QyxHQUFHLEdBQUcsTUFBTSxDQUFDLEdBQUc7Q0FDdEIsSUFBSSxTQUFTLE1BQU0sQ0FBQyxRQUFRLENBQUMsTUFBTSxFQUFFLEdBQUc7O0tBR3BDLElBQUk7V0FFTixJQUFJOztFQUdMLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsT0FBTzs7OztTQUc1QixVQUFVLENBQUMsSUFBSTtZQUNaLElBQUksQ0FBQyxJQUFJLEVBQUUsa0JBQWtCOzs7O09BSzlCLElBQUk7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==
